Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-08-04T18:57:10
  PicoBlaze-3 mode

  Last occupied address: 110 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 273
  Memory locations available: 751
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 01
000                             CONSTANT tx_full_user, 02
000                             CONSTANT rx_half_full_user, 04
000                             CONSTANT rx_full_user, 08
000                             CONSTANT rx_data_present_user, 10

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT UART_write_port_pwm_gauge, 08
000                             CONSTANT tx_half_full_pwm_gauge, 01
000                             CONSTANT tx_full_pwm_gauge, 02
000                             CONSTANT rx_half_full_pwm_gauge, 04
000                             CONSTANT rx_full_pwm_gauge, 08
000                             CONSTANT rx_data_present_pwm_gauge, 10

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             CONSTANT tx_half_full_sseg, 01
000                             CONSTANT tx_full_sseg, 02

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 01
000                             CONSTANT tx_full_led, 02

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character

000                             CONSTANT led_address, 00
000                             CONSTANT led_value, 01

000                 initialize:
000  3C000                      DISABLE INTERRUPT

001               program_loop:
001  300E8                      CALL read_from_UART_user
002  300D6                      CALL send_to_UART_user
003  14F6C                      COMPARE UART_data_user, character_l
004  35008                      JUMP Z, handle_led
005  14F73                      COMPARE UART_data_user, character_s
006  3501E                      JUMP Z, handle_sseg
007  340C3                      JUMP print_error_message

008                 handle_led:
008  30075                      CALL receive_led_address
009  14001                      COMPARE s0, 01
00A  350D2                      JUMP Z, error_routine

00B  30080                      CALL ascii_to_digit
00C  14001                      COMPARE s0, 01
00D  350D2                      JUMP Z, error_routine

00E  2EF00                      STORE UART_data_user, led_address

00F  300E8                      CALL read_from_UART_user
010  300D6                      CALL send_to_UART_user
011  14F76                      COMPARE UART_data_user, character_v
012  354D2                      JUMP NZ, error_routine

013  30028                      CALL receive_led_number
014  14001                      COMPARE s0, 01
015  350D2                      JUMP Z, error_routine

016  2EE01                      STORE UART_data_led, led_value

017  06E00                      FETCH UART_data_led, led_address
018  300E2                      CALL send_to_UART_led

019  06E01                      FETCH UART_data_led, led_value
01A  300E2                      CALL send_to_UART_led

01B  00F20                      LOAD UART_data_user, character_space
01C  300D6                      CALL send_to_UART_user

01D  34001                      JUMP program_loop

01E                handle_sseg:
01E  30075                      CALL receive_led_address
01F  14001                      COMPARE s0, 01
020  350D2                      JUMP Z, error_routine

021  01CF0                      LOAD UART_data_pwm_gauge, UART_data_user
022  300EE                      CALL send_to_UART_pwm_gauge

023  300F4                      CALL read_from_UART_pwm
024  300B3                      CALL send_to_sseg

025  00F20                      LOAD UART_data_user, character_space
026  300D6                      CALL send_to_UART_user
027  34001                      JUMP program_loop

028         receive_led_number:
028  00E00                      LOAD UART_data_led, 00

029  3005C                      CALL receive_digit
02A  30080                      CALL ascii_to_digit
02B  14F03                      COMPARE UART_data_user, 03
02C  35CD4                      JUMP NC, return_error
02D  14F02                      COMPARE UART_data_user, 02
02E  3503E                      JUMP Z, case_2_first

02F  015F0   case_0_or_1_first: LOAD multiplicand, UART_data_user
030  00464                      LOAD multiplier, 64
031  300FA                      CALL multiply
032  19E10                      ADD UART_data_led, result_lsb

033  3005C                      CALL receive_digit
034  30080                      CALL ascii_to_digit
035  015F0                      LOAD multiplicand, UART_data_user
036  0040A                      LOAD multiplier, 0A
037  300FA                      CALL multiply
038  19E10                      ADD UART_data_led, result_lsb

039  3005C                      CALL receive_digit
03A  30080                      CALL ascii_to_digit
03B  19EF0                      ADD UART_data_led, UART_data_user

03C  00000                      LOAD s0, 00
03D  2A000                      RETURN

03E  015F0        case_2_first: LOAD multiplicand, UART_data_user
03F  00464                      LOAD multiplier, 64
040  300FA                      CALL multiply
041  19E10                      ADD UART_data_led, result_lsb

042  3005C                      CALL receive_digit
043  30080                      CALL ascii_to_digit
044  14F06                      COMPARE UART_data_user, 06
045  35CD4                      JUMP NC, return_error
046  14F05                      COMPARE UART_data_user, 05
047  35051                      JUMP Z, case_5_second

048  015F0  case_0_to_4_second: LOAD multiplicand, UART_data_user
049  0040A                      LOAD multiplier, 0A
04A  300FA                      CALL multiply
04B  19E10                      ADD UART_data_led, result_lsb

04C  3005C                      CALL receive_digit
04D  30080                      CALL ascii_to_digit
04E  19EF0                      ADD UART_data_led, UART_data_user

04F  00000                      LOAD s0, 00
050  2A000                      RETURN

051  015F0       case_5_second: LOAD multiplicand, UART_data_user
052  0040A                      LOAD multiplier, 0A
053  300FA                      CALL multiply
054  19E10                      ADD UART_data_led, result_lsb

055  3005C                      CALL receive_digit
056  30080                      CALL ascii_to_digit
057  14F06                      COMPARE UART_data_user, 06
058  35CD4                      JUMP NC, return_error

059  19EF0                      ADD UART_data_led, UART_data_user

05A  00000                      LOAD s0, 00
05B  2A000                      RETURN


05C              receive_digit:
05C  300E8                      CALL read_from_UART_user
05D  300D6                      CALL send_to_UART_user
05E  14F30                      COMPARE UART_data_user, 30
05F  35073                      JUMP Z, digit_received
060  14F31                      COMPARE UART_data_user, 31
061  35073                      JUMP Z, digit_received
062  14F32                      COMPARE UART_data_user, 32
063  35073                      JUMP Z, digit_received
064  14F33                      COMPARE UART_data_user, 33
065  35073                      JUMP Z, digit_received
066  14F34                      COMPARE UART_data_user, 34
067  35073                      JUMP Z, digit_received
068  14F35                      COMPARE UART_data_user, 35
069  35073                      JUMP Z, digit_received
06A  14F36                      COMPARE UART_data_user, 36
06B  35073                      JUMP Z, digit_received
06C  14F37                      COMPARE UART_data_user, 37
06D  35073                      JUMP Z, digit_received
06E  14F38                      COMPARE UART_data_user, 38
06F  35073                      JUMP Z, digit_received
070  14F39                      COMPARE UART_data_user, 39
071  35073                      JUMP Z, digit_received
072  340D4                      JUMP return_error
073  00000      digit_received: LOAD s0, 00
074  2A000                      RETURN

075        receive_led_address:
075  300E8                      CALL read_from_UART_user
076  300D6                      CALL send_to_UART_user
077  14F31                      COMPARE UART_data_user, 31
078  3507E                      JUMP Z, address_received
079  14F32                      COMPARE UART_data_user, 32
07A  3507E                      JUMP Z, address_received
07B  14F33                      COMPARE UART_data_user, 33
07C  3507E                      JUMP Z, address_received
07D  340D4                      JUMP return_error
07E  00000    address_received: LOAD s0, 00
07F  2A000                      RETURN

080             ascii_to_digit:
080  14F30                      COMPARE UART_data_user, 30
081  35095                      JUMP Z, zero_received
082  14F31                      COMPARE UART_data_user, 31
083  35098                      JUMP Z, one_received
084  14F32                      COMPARE UART_data_user, 32
085  3509B                      JUMP Z, two_received
086  14F33                      COMPARE UART_data_user, 33
087  3509E                      JUMP Z, three_received
088  14F34                      COMPARE UART_data_user, 34
089  350A1                      JUMP Z, four_received
08A  14F35                      COMPARE UART_data_user, 35
08B  350A4                      JUMP Z, five_received
08C  14F36                      COMPARE UART_data_user, 36
08D  350A7                      JUMP Z, six_received
08E  14F37                      COMPARE UART_data_user, 37
08F  350AA                      JUMP Z, seven_received
090  14F38                      COMPARE UART_data_user, 38
091  350AD                      JUMP Z, eight_received
092  14F39                      COMPARE UART_data_user, 39
093  350B0                      JUMP Z, nine_received

094  340D4                      JUMP return_error

095  00F00       zero_received: LOAD UART_data_user, 00
096  00000                      LOAD s0, 00
097  2A000                      RETURN
098  00F01        one_received: LOAD UART_data_user, 01
099  00000                      LOAD s0, 00
09A  2A000                      RETURN
09B  00F02        two_received: LOAD UART_data_user, 02
09C  00000                      LOAD s0, 00
09D  2A000                      RETURN
09E  00F03      three_received: LOAD UART_data_user, 03
09F  00000                      LOAD s0, 00
0A0  2A000                      RETURN
0A1  00F04       four_received: LOAD UART_data_user, 04
0A2  00000                      LOAD s0, 00
0A3  2A000                      RETURN
0A4  00F05       five_received: LOAD UART_data_user, 05
0A5  00000                      LOAD s0, 00
0A6  2A000                      RETURN
0A7  00F06        six_received: LOAD UART_data_user, 06
0A8  00000                      LOAD s0, 00
0A9  2A000                      RETURN
0AA  00F07      seven_received: LOAD UART_data_user, 07
0AB  00000                      LOAD s0, 00
0AC  2A000                      RETURN
0AD  00F08      eight_received: LOAD UART_data_user, 08
0AE  00000                      LOAD s0, 00
0AF  2A000                      RETURN
0B0  00F09       nine_received: LOAD UART_data_user, 09
0B1  00000                      LOAD s0, 00
0B2  2A000                      RETURN

0B3               send_to_sseg:
0B3  01AC0                      LOAD dividend, UART_data_pwm_gauge
0B4  00964                      LOAD divisor, 64
0B5  30105                      CALL divide
0B6  01D80                      LOAD UART_data_sseg, quotient
0B7  300DC                      CALL send_to_UART_sseg

0B8  01A70                      LOAD dividend, remainder
0B9  0090A                      LOAD divisor, 0A
0BA  30105                      CALL divide
0BB  01D80                      LOAD UART_data_sseg, quotient
0BC  300DC                      CALL send_to_UART_sseg

0BD  01A70                      LOAD dividend, remainder
0BE  00901                      LOAD divisor, 01
0BF  30105                      CALL divide
0C0  01D80                      LOAD UART_data_sseg, quotient
0C1  300DC                      CALL send_to_UART_sseg

0C2  2A000                      RETURN

0C3        print_error_message:
0C3  00F20                      LOAD UART_data_user, character_space
0C4  300D6                      CALL send_to_UART_user
0C5  00F65                      LOAD UART_data_user, character_e
0C6  300D6                      CALL send_to_UART_user
0C7  00F72                      LOAD UART_data_user, character_r
0C8  300D6                      CALL send_to_UART_user
0C9  00F72                      LOAD UART_data_user, character_r
0CA  300D6                      CALL send_to_UART_user
0CB  00F6F                      LOAD UART_data_user, character_o
0CC  300D6                      CALL send_to_UART_user
0CD  00F72                      LOAD UART_data_user, character_r
0CE  300D6                      CALL send_to_UART_user
0CF  00F20                      LOAD UART_data_user, character_space
0D0  300D6                      CALL send_to_UART_user
0D1  2A000                      RETURN

0D2  300C3       error_routine: CALL print_error_message
0D3  34001                      JUMP program_loop

0D4  00001        return_error: LOAD s0, 01
0D5  2A000                      RETURN

0D6          send_to_UART_user:
0D6  04001                      INPUT s0, UART_status_port_user
0D7  12002                      TEST s0, tx_full_user
0D8  350DA                      JUMP Z, UART_write_user
0D9  340D6                      JUMP send_to_UART_user
0DA            UART_write_user:
0DA  2CF01                      OUTPUT UART_data_user, UART_write_port_user
0DB  2A000                      RETURN

0DC          send_to_UART_sseg:
0DC  04010                      INPUT s0, UART_status_port_sseg
0DD  12002                      TEST s0, tx_full_sseg
0DE  350E0                      JUMP Z, UART_write_sseg
0DF  340DC                      JUMP send_to_UART_sseg
0E0            UART_write_sseg:
0E0  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
0E1  2A000                      RETURN


0E2           send_to_UART_led:
0E2  04020                      INPUT s0, UART_status_port_led
0E3  12002                      TEST s0, tx_full_led
0E4  350E6                      JUMP Z, UART_write_led
0E5  340E2                      JUMP send_to_UART_led
0E6             UART_write_led:
0E6  2CE04                      OUTPUT UART_data_led, UART_write_port_led
0E7  2A000                      RETURN


0E8        read_from_UART_user:
0E8  04001                      INPUT s0, UART_status_port_user
0E9  12010                      TEST s0, rx_data_present_user
0EA  354EC                      JUMP NZ, read_number
0EB  340E8                      JUMP read_from_UART_user
0EC                read_number:
0EC  04F02                      INPUT UART_data_user, UART_read_port_user
0ED  2A000                      RETURN

0EE        send_to_UART_pwm_gauge:
0EE  04004                      INPUT s0, UART_status_port_pwm_gauge
0EF  12002                      TEST s0, tx_full_pwm_gauge
0F0  350F2                      JUMP Z, UART_write_pwm_gauge
0F1  340EE                      JUMP send_to_UART_pwm_gauge
0F2        UART_write_pwm_gauge:
0F2  2CC08                      OUTPUT UART_data_pwm_gauge, UART_write_port_pwm_gauge
0F3  2A000                      RETURN

0F4         read_from_UART_pwm:
0F4  04004                      INPUT s0, UART_status_port_pwm_gauge
0F5  12010                      TEST s0, rx_data_present_pwm_gauge
0F6  354F8                      JUMP NZ, read_pwm_number
0F7  340F4                      JUMP read_from_UART_pwm
0F8            read_pwm_number:
0F8  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
0F9  2A000                      RETURN


0FA                   multiply:
0FA  00301                      LOAD bit_mask, 01
0FB  00200                      LOAD result_msb, 00
0FC  00100                      LOAD result_lsb, 00
0FD                  mult_loop:
0FD  13430                      TEST multiplier, bit_mask
0FE  35100                      JUMP Z, no_add
0FF  19250                      ADD result_msb, multiplicand
100                     no_add:
100  20208                      SRA result_msb
101  20108                      SRA result_lsb
102  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
103  354FD                      JUMP NZ, mult_loop
104  2A000                      RETURN



105                     divide:
105  00700                      LOAD remainder, 00
106  00380                      LOAD bit_mask, 80
107              division_loop:
107  13A30                      TEST dividend, bit_mask
108  20700                      SLA remainder
109  20806                      SL0 quotient
10A  15790                      COMPARE remainder, divisor
10B  3590E                      JUMP C, no_sub
10C  1D790                      SUB remainder, divisor
10D  18801                      ADD quotient, 01
10E                     no_sub:
10E  2030E                      SR0 bit_mask
10F  35507                      JUMP NZ, division_loop
110  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_pwm_gauge   08     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
    character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
 *  character_n                 6E     uart_kcpsm3.psm
    character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
    character_r                 72     uart_kcpsm3.psm
    character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
    character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
    character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               04
    datestamp_month             08
    datestamp_year              13
    led_address                 00     uart_kcpsm3.psm
    led_value                   01     uart_kcpsm3.psm
    rx_data_present_pwm_gauge   10     uart_kcpsm3.psm
    rx_data_present_user        10     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           08     uart_kcpsm3.psm
 *  rx_full_user                08     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      04     uart_kcpsm3.psm
 *  rx_half_full_user           04     uart_kcpsm3.psm
    timestamp_hours             12
    timestamp_minutes           39
    timestamp_seconds           0A
    tx_full_led                 02     uart_kcpsm3.psm
    tx_full_pwm_gauge           02     uart_kcpsm3.psm
    tx_full_sseg                02     uart_kcpsm3.psm
    tx_full_user                02     uart_kcpsm3.psm
 *  tx_half_full_led            01     uart_kcpsm3.psm
 *  tx_half_full_pwm_gauge      01     uart_kcpsm3.psm
 *  tx_half_full_sseg           01     uart_kcpsm3.psm
 *  tx_half_full_user           01     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "04 Aug 2019"
    timestamp$   "18:57:10"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    UART_write_led          0E6   uart_kcpsm3.psm
    UART_write_pwm_gauge    0F2   uart_kcpsm3.psm
    UART_write_sseg         0E0   uart_kcpsm3.psm
    UART_write_user         0DA   uart_kcpsm3.psm
    address_received        07E   uart_kcpsm3.psm
    ascii_to_digit          080   uart_kcpsm3.psm
 *  case_0_or_1_first       02F   uart_kcpsm3.psm
 *  case_0_to_4_second      048   uart_kcpsm3.psm
    case_2_first            03E   uart_kcpsm3.psm
    case_5_second           051   uart_kcpsm3.psm
    digit_received          073   uart_kcpsm3.psm
    divide                  105   uart_kcpsm3.psm
    division_loop           107   uart_kcpsm3.psm
    eight_received          0AD   uart_kcpsm3.psm
    error_routine           0D2   uart_kcpsm3.psm
    five_received           0A4   uart_kcpsm3.psm
    four_received           0A1   uart_kcpsm3.psm
    handle_led              008   uart_kcpsm3.psm
    handle_sseg             01E   uart_kcpsm3.psm
 *  initialize              000   uart_kcpsm3.psm
    mult_loop               0FD   uart_kcpsm3.psm
    multiply                0FA   uart_kcpsm3.psm
    nine_received           0B0   uart_kcpsm3.psm
    no_add                  100   uart_kcpsm3.psm
    no_sub                  10E   uart_kcpsm3.psm
    one_received            098   uart_kcpsm3.psm
    print_error_message     0C3   uart_kcpsm3.psm
    program_loop            001   uart_kcpsm3.psm
    read_from_UART_pwm      0F4   uart_kcpsm3.psm
    read_from_UART_user     0E8   uart_kcpsm3.psm
    read_number             0EC   uart_kcpsm3.psm
    read_pwm_number         0F8   uart_kcpsm3.psm
    receive_digit           05C   uart_kcpsm3.psm
    receive_led_address     075   uart_kcpsm3.psm
    receive_led_number      028   uart_kcpsm3.psm
    return_error            0D4   uart_kcpsm3.psm
    send_to_UART_led        0E2   uart_kcpsm3.psm
    send_to_UART_pwm_gauge  0EE   uart_kcpsm3.psm
    send_to_UART_sseg       0DC   uart_kcpsm3.psm
    send_to_UART_user       0D6   uart_kcpsm3.psm
    send_to_sseg            0B3   uart_kcpsm3.psm
    seven_received          0AA   uart_kcpsm3.psm
    six_received            0A7   uart_kcpsm3.psm
    three_received          09E   uart_kcpsm3.psm
    two_received            09B   uart_kcpsm3.psm
    zero_received           095   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          10
   ADDCY        -
   AND          -
   CALL         50
   COMPARE      36
   DISABLE      1
   ENABLE       -
   FETCH        2
   INPUT        8
   JUMP         58
   LOAD         61
   OR           -
   OUTPUT       4
   RETURN       26
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        2
   SUB          1
   SUBCY        -
   TEST         8
   XOR          -

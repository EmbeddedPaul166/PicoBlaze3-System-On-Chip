Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-07-26T16:05:44
  PicoBlaze-3 mode

  Last occupied address: 0A4 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 165
  Memory locations available: 859
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 01
000                             CONSTANT tx_full_user, 02
000                             CONSTANT rx_half_full_user, 04
000                             CONSTANT rx_full_user, 08
000                             CONSTANT rx_data_present_user, 10

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT rx_half_full_pwm_gauge, 01
000                             CONSTANT rx_full_pwm_gauge, 02
000                             CONSTANT rx_data_present_pwm_gauge, 04

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             CONSTANT tx_half_full_sseg, 01
000                             CONSTANT tx_full_sseg, 02

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 01
000                             CONSTANT tx_full_led, 02

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character

000                             CONSTANT pwm_one, 03
000                             CONSTANT pwm_two, 04
000                             CONSTANT pwm_three, 05


000                 initialize:
000  3C000                      DISABLE INTERRUPT
001               program_loop:
001  30082                      CALL read_from_UART_user
002  30070                      CALL send_to_UART_user
003  14F6C                      COMPARE UART_data_user, character_l
004  35008                      JUMP Z, handle_led
005  14F73                      COMPARE UART_data_user, character_s
006  3500B                      JUMP Z, send_pwm_value_to_sseg
007  34001                      JUMP program_loop
008                 handle_led:
008  3000E                      CALL receive_led_number
009  3007C                      CALL send_to_UART_led
00A  34001                      JUMP program_loop
00B        send_pwm_value_to_sseg:
00B  30088                      CALL read_from_UART_pwm
00C  30060                      CALL send_to_sseg
00D  34001                      JUMP program_loop
00E         receive_led_number:
00E  00E00                      LOAD UART_data_led, 00

00F  3001F                      CALL receive_digit
010  30037                      CALL ascii_to_digit
011  015F0                      LOAD multiplicand, UART_data_user
012  00464                      LOAD multiplier, 64
013  3008E                      CALL multiply
014  19E10                      ADD UART_data_led, result_lsb

015  3001F                      CALL receive_digit
016  30037                      CALL ascii_to_digit
017  015F0                      LOAD multiplicand, UART_data_user
018  0040A                      LOAD multiplier, 0A
019  3008E                      CALL multiply
01A  19E10                      ADD UART_data_led, result_lsb

01B  3001F                      CALL receive_digit
01C  30037                      CALL ascii_to_digit
01D  19EF0                      ADD UART_data_led, UART_data_user
01E  2A000                      RETURN

01F              receive_digit:
01F  30082                      CALL read_from_UART_user
020  30070                      CALL send_to_UART_user
021  14F30                      COMPARE UART_data_user, 30
022  35036                      JUMP Z, digit_received
023  14F31                      COMPARE UART_data_user, 31
024  35036                      JUMP Z, digit_received
025  14F32                      COMPARE UART_data_user, 32
026  35036                      JUMP Z, digit_received
027  14F33                      COMPARE UART_data_user, 33
028  35036                      JUMP Z, digit_received
029  14F34                      COMPARE UART_data_user, 34
02A  35036                      JUMP Z, digit_received
02B  14F35                      COMPARE UART_data_user, 35
02C  35036                      JUMP Z, digit_received
02D  14F36                      COMPARE UART_data_user, 36
02E  35036                      JUMP Z, digit_received
02F  14F37                      COMPARE UART_data_user, 37
030  35036                      JUMP Z, digit_received
031  14F38                      COMPARE UART_data_user, 38
032  35036                      JUMP Z, digit_received
033  14F39                      COMPARE UART_data_user, 39
034  35036                      JUMP Z, digit_received
035  34001                      JUMP program_loop
036  2A000      digit_received: RETURN

037             ascii_to_digit:
037  14F30                      COMPARE UART_data_user, 30
038  3504C                      JUMP Z, zero_received
039  14F31                      COMPARE UART_data_user, 31
03A  3504E                      JUMP Z, one_received
03B  14F32                      COMPARE UART_data_user, 32
03C  35050                      JUMP Z, two_received
03D  14F33                      COMPARE UART_data_user, 33
03E  35052                      JUMP Z, three_received
03F  14F34                      COMPARE UART_data_user, 34
040  35054                      JUMP Z, four_received
041  14F35                      COMPARE UART_data_user, 35
042  35056                      JUMP Z, five_received
043  14F36                      COMPARE UART_data_user, 36
044  35058                      JUMP Z, six_received
045  14F37                      COMPARE UART_data_user, 37
046  3505A                      JUMP Z, seven_received
047  14F38                      COMPARE UART_data_user, 38
048  3505C                      JUMP Z, eight_received
049  14F39                      COMPARE UART_data_user, 39
04A  3505E                      JUMP Z, nine_received
04B  34001                      JUMP program_loop

04C  00F00       zero_received: LOAD UART_data_user, 00
04D  2A000                      RETURN
04E  00F01        one_received: LOAD UART_data_user, 01
04F  2A000                      RETURN
050  00F02        two_received: LOAD UART_data_user, 02
051  2A000                      RETURN
052  00F03      three_received: LOAD UART_data_user, 03
053  2A000                      RETURN
054  00F04       four_received: LOAD UART_data_user, 04
055  2A000                      RETURN
056  00F05       five_received: LOAD UART_data_user, 05
057  2A000                      RETURN
058  00F06        six_received: LOAD UART_data_user, 06
059  2A000                      RETURN
05A  00F07      seven_received: LOAD UART_data_user, 07
05B  2A000                      RETURN
05C  00F08      eight_received: LOAD UART_data_user, 08
05D  2A000                      RETURN
05E  00F09       nine_received: LOAD UART_data_user, 09
05F  2A000                      RETURN

060               send_to_sseg:
060  01AC0                      LOAD dividend, UART_data_pwm_gauge
061  00964                      LOAD divisor, 64
062  30099                      CALL divide
063  01D80                      LOAD UART_data_sseg, quotient
064  30076                      CALL send_to_UART_sseg

065  01A70                      LOAD dividend, remainder
066  0090A                      LOAD divisor, 0A
067  30099                      CALL divide
068  01D80                      LOAD UART_data_sseg, quotient
069  30076                      CALL send_to_UART_sseg

06A  01A70                      LOAD dividend, remainder
06B  00901                      LOAD divisor, 01
06C  30099                      CALL divide
06D  01D80                      LOAD UART_data_sseg, quotient
06E  30076                      CALL send_to_UART_sseg

06F  2A000                      RETURN

070          send_to_UART_user:
070  04001                      INPUT s0, UART_status_port_user
071  12002                      TEST s0, tx_full_user
072  35074                      JUMP Z, UART_write_user
073  34070                      JUMP send_to_UART_user
074            UART_write_user:
074  2CF01                      OUTPUT UART_data_user, UART_write_port_user
075  2A000                      RETURN

076          send_to_UART_sseg:
076  04010                      INPUT s0, UART_status_port_sseg
077  12002                      TEST s0, tx_full_sseg
078  3507A                      JUMP Z, UART_write_sseg
079  34076                      JUMP send_to_UART_sseg
07A            UART_write_sseg:
07A  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
07B  2A000                      RETURN


07C           send_to_UART_led:
07C  04020                      INPUT s0, UART_status_port_led
07D  12002                      TEST s0, tx_full_led
07E  35080                      JUMP Z, UART_write_led
07F  3407C                      JUMP send_to_UART_led
080             UART_write_led:
080  2CE04                      OUTPUT UART_data_led, UART_write_port_led
081  2A000                      RETURN


082        read_from_UART_user:
082  04001                      INPUT s0, UART_status_port_user
083  12010                      TEST s0, rx_data_present_user
084  35486                      JUMP NZ, read_number
085  34082                      JUMP read_from_UART_user
086                read_number:
086  04F02                      INPUT UART_data_user, UART_read_port_user
087  2A000                      RETURN

088         read_from_UART_pwm:
088  04004                      INPUT s0, UART_status_port_pwm_gauge
089  12004                      TEST s0, rx_data_present_pwm_gauge
08A  3548C                      JUMP NZ, read_pwm_number
08B  34088                      JUMP read_from_UART_pwm
08C            read_pwm_number:
08C  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
08D  2A000                      RETURN


08E                   multiply:
08E  00301                      LOAD bit_mask, 01
08F  00200                      LOAD result_msb, 00
090  00100                      LOAD result_lsb, 00
091                  mult_loop:
091  13430                      TEST multiplier, bit_mask
092  35094                      JUMP Z, no_add
093  19250                      ADD result_msb, multiplicand
094                     no_add:
094  20208                      SRA result_msb
095  20108                      SRA result_lsb
096  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
097  35491                      JUMP NZ, mult_loop
098  2A000                      RETURN



099                     divide:
099  00700                      LOAD remainder, 00
09A  00380                      LOAD bit_mask, 80
09B              division_loop:
09B  13A30                      TEST dividend, bit_mask
09C  20700                      SLA remainder
09D  20806                      SL0 quotient
09E  15790                      COMPARE remainder, divisor
09F  358A2                      JUMP C, no_sub
0A0  1D790                      SUB remainder, divisor
0A1  18801                      ADD quotient, 01
0A2                     no_sub:
0A2  2030E                      SR0 bit_mask
0A3  3549B                      JUMP NZ, division_loop
0A4  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
 *  character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
 *  character_n                 6E     uart_kcpsm3.psm
 *  character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
 *  character_r                 72     uart_kcpsm3.psm
    character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
 *  character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
 *  character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               1A
    datestamp_month             07
    datestamp_year              13
 *  pwm_one                     03     uart_kcpsm3.psm
 *  pwm_three                   05     uart_kcpsm3.psm
 *  pwm_two                     04     uart_kcpsm3.psm
    rx_data_present_pwm_gauge   04     uart_kcpsm3.psm
    rx_data_present_user        10     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           02     uart_kcpsm3.psm
 *  rx_full_user                08     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      01     uart_kcpsm3.psm
 *  rx_half_full_user           04     uart_kcpsm3.psm
    timestamp_hours             10
    timestamp_minutes           05
    timestamp_seconds           2C
    tx_full_led                 02     uart_kcpsm3.psm
    tx_full_sseg                02     uart_kcpsm3.psm
    tx_full_user                02     uart_kcpsm3.psm
 *  tx_half_full_led            01     uart_kcpsm3.psm
 *  tx_half_full_sseg           01     uart_kcpsm3.psm
 *  tx_half_full_user           01     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "26 Jul 2019"
    timestamp$   "16:05:44"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    UART_write_led          080   uart_kcpsm3.psm
    UART_write_sseg         07A   uart_kcpsm3.psm
    UART_write_user         074   uart_kcpsm3.psm
    ascii_to_digit          037   uart_kcpsm3.psm
    digit_received          036   uart_kcpsm3.psm
    divide                  099   uart_kcpsm3.psm
    division_loop           09B   uart_kcpsm3.psm
    eight_received          05C   uart_kcpsm3.psm
    five_received           056   uart_kcpsm3.psm
    four_received           054   uart_kcpsm3.psm
    handle_led              008   uart_kcpsm3.psm
 *  initialize              000   uart_kcpsm3.psm
    mult_loop               091   uart_kcpsm3.psm
    multiply                08E   uart_kcpsm3.psm
    nine_received           05E   uart_kcpsm3.psm
    no_add                  094   uart_kcpsm3.psm
    no_sub                  0A2   uart_kcpsm3.psm
    one_received            04E   uart_kcpsm3.psm
    program_loop            001   uart_kcpsm3.psm
    read_from_UART_pwm      088   uart_kcpsm3.psm
    read_from_UART_user     082   uart_kcpsm3.psm
    read_number             086   uart_kcpsm3.psm
    read_pwm_number         08C   uart_kcpsm3.psm
    receive_digit           01F   uart_kcpsm3.psm
    receive_led_number      00E   uart_kcpsm3.psm
    send_pwm_value_to_sseg  00B   uart_kcpsm3.psm
    send_to_UART_led        07C   uart_kcpsm3.psm
    send_to_UART_sseg       076   uart_kcpsm3.psm
    send_to_UART_user       070   uart_kcpsm3.psm
    send_to_sseg            060   uart_kcpsm3.psm
    seven_received          05A   uart_kcpsm3.psm
    six_received            058   uart_kcpsm3.psm
    three_received          052   uart_kcpsm3.psm
    two_received            050   uart_kcpsm3.psm
    zero_received           04C   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          5
   ADDCY        -
   AND          -
   CALL         22
   COMPARE      23
   DISABLE      1
   ENABLE       -
   FETCH        -
   INPUT        7
   JUMP         41
   LOAD         29
   OR           -
   OUTPUT       3
   RETURN       20
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        -
   SUB          1
   SUBCY        -
   TEST         7
   XOR          -

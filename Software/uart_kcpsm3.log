Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-07-26T22:14:35
  PicoBlaze-3 mode

  Last occupied address: 0C7 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 200
  Memory locations available: 824
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 01
000                             CONSTANT tx_full_user, 02
000                             CONSTANT rx_half_full_user, 04
000                             CONSTANT rx_full_user, 08
000                             CONSTANT rx_data_present_user, 10

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT rx_half_full_pwm_gauge, 01
000                             CONSTANT rx_full_pwm_gauge, 02
000                             CONSTANT rx_data_present_pwm_gauge, 04

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             CONSTANT tx_half_full_sseg, 01
000                             CONSTANT tx_full_sseg, 02

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 01
000                             CONSTANT tx_full_led, 02

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character

000                             CONSTANT operation_status, 00
000                             CONSTANT pwm_one, 01
000                             CONSTANT pwm_two, 02
000                             CONSTANT pwm_three, 03



000                 initialize:
000  3C000                      DISABLE INTERRUPT

001               program_loop:
001  300A5                      CALL read_from_UART_user
002  30093                      CALL send_to_UART_user
003  14F6C                      COMPARE UART_data_user, character_l
004  35008                      JUMP Z, handle_led
005  14F73                      COMPARE UART_data_user, character_s
006  35015                      JUMP Z, send_pwm_value_to_sseg
007  34084                      JUMP print_error_message

008                 handle_led:
008  30041                      CALL receive_led_address
009  3004B                      CALL ascii_to_digit
00A  01EF0                      LOAD UART_data_led, UART_data_user
00B  3009F                      CALL send_to_UART_led

00C  300A5                      CALL read_from_UART_user
00D  30093                      CALL send_to_UART_user
00E  14F76                      COMPARE UART_data_user, character_v
00F  35484                      JUMP NZ, print_error_message

010  30018                      CALL receive_led_number
011  3009F                      CALL send_to_UART_led

012  00F20                      LOAD UART_data_user, character_space
013  30093                      CALL send_to_UART_user
014  34001                      JUMP program_loop

015        send_pwm_value_to_sseg:
015  300AB                      CALL read_from_UART_pwm
016  30074                      CALL send_to_sseg
017  34001                      JUMP program_loop

018         receive_led_number:
018  00E00                      LOAD UART_data_led, 00

019  30029                      CALL receive_digit
01A  3004B                      CALL ascii_to_digit
01B  015F0                      LOAD multiplicand, UART_data_user
01C  00464                      LOAD multiplier, 64
01D  300B1                      CALL multiply
01E  19E10                      ADD UART_data_led, result_lsb

01F  30029                      CALL receive_digit
020  3004B                      CALL ascii_to_digit
021  015F0                      LOAD multiplicand, UART_data_user
022  0040A                      LOAD multiplier, 0A
023  300B1                      CALL multiply
024  19E10                      ADD UART_data_led, result_lsb

025  30029                      CALL receive_digit
026  3004B                      CALL ascii_to_digit
027  19EF0                      ADD UART_data_led, UART_data_user
028  2A000                      RETURN

029              receive_digit:
029  300A5                      CALL read_from_UART_user
02A  30093                      CALL send_to_UART_user
02B  14F30                      COMPARE UART_data_user, 30
02C  35040                      JUMP Z, digit_received
02D  14F31                      COMPARE UART_data_user, 31
02E  35040                      JUMP Z, digit_received
02F  14F32                      COMPARE UART_data_user, 32
030  35040                      JUMP Z, digit_received
031  14F33                      COMPARE UART_data_user, 33
032  35040                      JUMP Z, digit_received
033  14F34                      COMPARE UART_data_user, 34
034  35040                      JUMP Z, digit_received
035  14F35                      COMPARE UART_data_user, 35
036  35040                      JUMP Z, digit_received
037  14F36                      COMPARE UART_data_user, 36
038  35040                      JUMP Z, digit_received
039  14F37                      COMPARE UART_data_user, 37
03A  35040                      JUMP Z, digit_received
03B  14F38                      COMPARE UART_data_user, 38
03C  35040                      JUMP Z, digit_received
03D  14F39                      COMPARE UART_data_user, 39
03E  35040                      JUMP Z, digit_received
03F  34084                      JUMP print_error_message
040  2A000      digit_received: RETURN

041        receive_led_address:
041  300A5                      CALL read_from_UART_user
042  30093                      CALL send_to_UART_user
043  14F31                      COMPARE UART_data_user, 31
044  3504A                      JUMP Z, address_received
045  14F32                      COMPARE UART_data_user, 32
046  3504A                      JUMP Z, address_received
047  14F33                      COMPARE UART_data_user, 33
048  3504A                      JUMP Z, address_received
049  34084                      JUMP print_error_message
04A  2A000    address_received: RETURN

04B             ascii_to_digit:
04B  14F30                      COMPARE UART_data_user, 30
04C  35060                      JUMP Z, zero_received
04D  14F31                      COMPARE UART_data_user, 31
04E  35062                      JUMP Z, one_received
04F  14F32                      COMPARE UART_data_user, 32
050  35064                      JUMP Z, two_received
051  14F33                      COMPARE UART_data_user, 33
052  35066                      JUMP Z, three_received
053  14F34                      COMPARE UART_data_user, 34
054  35068                      JUMP Z, four_received
055  14F35                      COMPARE UART_data_user, 35
056  3506A                      JUMP Z, five_received
057  14F36                      COMPARE UART_data_user, 36
058  3506C                      JUMP Z, six_received
059  14F37                      COMPARE UART_data_user, 37
05A  3506E                      JUMP Z, seven_received
05B  14F38                      COMPARE UART_data_user, 38
05C  35070                      JUMP Z, eight_received
05D  14F39                      COMPARE UART_data_user, 39
05E  35072                      JUMP Z, nine_received
05F  34084                      JUMP print_error_message

060  00F00       zero_received: LOAD UART_data_user, 00
061  2A000                      RETURN
062  00F01        one_received: LOAD UART_data_user, 01
063  2A000                      RETURN
064  00F02        two_received: LOAD UART_data_user, 02
065  2A000                      RETURN
066  00F03      three_received: LOAD UART_data_user, 03
067  2A000                      RETURN
068  00F04       four_received: LOAD UART_data_user, 04
069  2A000                      RETURN
06A  00F05       five_received: LOAD UART_data_user, 05
06B  2A000                      RETURN
06C  00F06        six_received: LOAD UART_data_user, 06
06D  2A000                      RETURN
06E  00F07      seven_received: LOAD UART_data_user, 07
06F  2A000                      RETURN
070  00F08      eight_received: LOAD UART_data_user, 08
071  2A000                      RETURN
072  00F09       nine_received: LOAD UART_data_user, 09
073  2A000                      RETURN

074               send_to_sseg:
074  01AC0                      LOAD dividend, UART_data_pwm_gauge
075  00964                      LOAD divisor, 64
076  300BC                      CALL divide
077  01D80                      LOAD UART_data_sseg, quotient
078  30099                      CALL send_to_UART_sseg

079  01A70                      LOAD dividend, remainder
07A  0090A                      LOAD divisor, 0A
07B  300BC                      CALL divide
07C  01D80                      LOAD UART_data_sseg, quotient
07D  30099                      CALL send_to_UART_sseg

07E  01A70                      LOAD dividend, remainder
07F  00901                      LOAD divisor, 01
080  300BC                      CALL divide
081  01D80                      LOAD UART_data_sseg, quotient
082  30099                      CALL send_to_UART_sseg

083  2A000                      RETURN

084        print_error_message:
084  00F20                      LOAD UART_data_user, character_space
085  30093                      CALL send_to_UART_user
086  00F65                      LOAD UART_data_user, character_e
087  30093                      CALL send_to_UART_user
088  00F72                      LOAD UART_data_user, character_r
089  30093                      CALL send_to_UART_user
08A  00F72                      LOAD UART_data_user, character_r
08B  30093                      CALL send_to_UART_user
08C  00F6F                      LOAD UART_data_user, character_o
08D  30093                      CALL send_to_UART_user
08E  00F72                      LOAD UART_data_user, character_r
08F  30093                      CALL send_to_UART_user
090  00F20                      LOAD UART_data_user, character_space
091  30093                      CALL send_to_UART_user
092  34001                      JUMP program_loop



093          send_to_UART_user:
093  04001                      INPUT s0, UART_status_port_user
094  12002                      TEST s0, tx_full_user
095  35097                      JUMP Z, UART_write_user
096  34093                      JUMP send_to_UART_user
097            UART_write_user:
097  2CF01                      OUTPUT UART_data_user, UART_write_port_user
098  2A000                      RETURN

099          send_to_UART_sseg:
099  04010                      INPUT s0, UART_status_port_sseg
09A  12002                      TEST s0, tx_full_sseg
09B  3509D                      JUMP Z, UART_write_sseg
09C  34099                      JUMP send_to_UART_sseg
09D            UART_write_sseg:
09D  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
09E  2A000                      RETURN


09F           send_to_UART_led:
09F  04020                      INPUT s0, UART_status_port_led
0A0  12002                      TEST s0, tx_full_led
0A1  350A3                      JUMP Z, UART_write_led
0A2  3409F                      JUMP send_to_UART_led
0A3             UART_write_led:
0A3  2CE04                      OUTPUT UART_data_led, UART_write_port_led
0A4  2A000                      RETURN


0A5        read_from_UART_user:
0A5  04001                      INPUT s0, UART_status_port_user
0A6  12010                      TEST s0, rx_data_present_user
0A7  354A9                      JUMP NZ, read_number
0A8  340A5                      JUMP read_from_UART_user
0A9                read_number:
0A9  04F02                      INPUT UART_data_user, UART_read_port_user
0AA  2A000                      RETURN

0AB         read_from_UART_pwm:
0AB  04004                      INPUT s0, UART_status_port_pwm_gauge
0AC  12004                      TEST s0, rx_data_present_pwm_gauge
0AD  354AF                      JUMP NZ, read_pwm_number
0AE  340AB                      JUMP read_from_UART_pwm
0AF            read_pwm_number:
0AF  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
0B0  2A000                      RETURN


0B1                   multiply:
0B1  00301                      LOAD bit_mask, 01
0B2  00200                      LOAD result_msb, 00
0B3  00100                      LOAD result_lsb, 00
0B4                  mult_loop:
0B4  13430                      TEST multiplier, bit_mask
0B5  350B7                      JUMP Z, no_add
0B6  19250                      ADD result_msb, multiplicand
0B7                     no_add:
0B7  20208                      SRA result_msb
0B8  20108                      SRA result_lsb
0B9  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
0BA  354B4                      JUMP NZ, mult_loop
0BB  2A000                      RETURN



0BC                     divide:
0BC  00700                      LOAD remainder, 00
0BD  00380                      LOAD bit_mask, 80
0BE              division_loop:
0BE  13A30                      TEST dividend, bit_mask
0BF  20700                      SLA remainder
0C0  20806                      SL0 quotient
0C1  15790                      COMPARE remainder, divisor
0C2  358C5                      JUMP C, no_sub
0C3  1D790                      SUB remainder, divisor
0C4  18801                      ADD quotient, 01
0C5                     no_sub:
0C5  2030E                      SR0 bit_mask
0C6  354BE                      JUMP NZ, division_loop
0C7  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
    character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
 *  character_n                 6E     uart_kcpsm3.psm
    character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
    character_r                 72     uart_kcpsm3.psm
    character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
    character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
    character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               1A
    datestamp_month             07
    datestamp_year              13
 *  operation_status            00     uart_kcpsm3.psm
 *  pwm_one                     01     uart_kcpsm3.psm
 *  pwm_three                   03     uart_kcpsm3.psm
 *  pwm_two                     02     uart_kcpsm3.psm
    rx_data_present_pwm_gauge   04     uart_kcpsm3.psm
    rx_data_present_user        10     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           02     uart_kcpsm3.psm
 *  rx_full_user                08     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      01     uart_kcpsm3.psm
 *  rx_half_full_user           04     uart_kcpsm3.psm
    timestamp_hours             16
    timestamp_minutes           0E
    timestamp_seconds           23
    tx_full_led                 02     uart_kcpsm3.psm
    tx_full_sseg                02     uart_kcpsm3.psm
    tx_full_user                02     uart_kcpsm3.psm
 *  tx_half_full_led            01     uart_kcpsm3.psm
 *  tx_half_full_sseg           01     uart_kcpsm3.psm
 *  tx_half_full_user           01     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "26 Jul 2019"
    timestamp$   "22:14:35"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    UART_write_led          0A3   uart_kcpsm3.psm
    UART_write_sseg         09D   uart_kcpsm3.psm
    UART_write_user         097   uart_kcpsm3.psm
    address_received        04A   uart_kcpsm3.psm
    ascii_to_digit          04B   uart_kcpsm3.psm
    digit_received          040   uart_kcpsm3.psm
    divide                  0BC   uart_kcpsm3.psm
    division_loop           0BE   uart_kcpsm3.psm
    eight_received          070   uart_kcpsm3.psm
    five_received           06A   uart_kcpsm3.psm
    four_received           068   uart_kcpsm3.psm
    handle_led              008   uart_kcpsm3.psm
 *  initialize              000   uart_kcpsm3.psm
    mult_loop               0B4   uart_kcpsm3.psm
    multiply                0B1   uart_kcpsm3.psm
    nine_received           072   uart_kcpsm3.psm
    no_add                  0B7   uart_kcpsm3.psm
    no_sub                  0C5   uart_kcpsm3.psm
    one_received            062   uart_kcpsm3.psm
    print_error_message     084   uart_kcpsm3.psm
    program_loop            001   uart_kcpsm3.psm
    read_from_UART_pwm      0AB   uart_kcpsm3.psm
    read_from_UART_user     0A5   uart_kcpsm3.psm
    read_number             0A9   uart_kcpsm3.psm
    read_pwm_number         0AF   uart_kcpsm3.psm
    receive_digit           029   uart_kcpsm3.psm
    receive_led_address     041   uart_kcpsm3.psm
    receive_led_number      018   uart_kcpsm3.psm
    send_pwm_value_to_sseg  015   uart_kcpsm3.psm
    send_to_UART_led        09F   uart_kcpsm3.psm
    send_to_UART_sseg       099   uart_kcpsm3.psm
    send_to_UART_user       093   uart_kcpsm3.psm
    send_to_sseg            074   uart_kcpsm3.psm
    seven_received          06E   uart_kcpsm3.psm
    six_received            06C   uart_kcpsm3.psm
    three_received          066   uart_kcpsm3.psm
    two_received            064   uart_kcpsm3.psm
    zero_received           060   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          5
   ADDCY        -
   AND          -
   CALL         37
   COMPARE      27
   DISABLE      1
   ENABLE       -
   FETCH        -
   INPUT        7
   JUMP         47
   LOAD         38
   OR           -
   OUTPUT       3
   RETURN       21
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        -
   SUB          1
   SUBCY        -
   TEST         7
   XOR          -

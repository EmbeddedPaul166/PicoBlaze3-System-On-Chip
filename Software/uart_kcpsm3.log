Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-08-04T18:16:05
  PicoBlaze-3 mode

  Last occupied address: 0EF hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 240
  Memory locations available: 784
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 01
000                             CONSTANT tx_full_user, 02
000                             CONSTANT rx_half_full_user, 04
000                             CONSTANT rx_full_user, 08
000                             CONSTANT rx_data_present_user, 10

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT UART_write_port_pwm_gauge, 08
000                             CONSTANT tx_half_full_pwm_gauge, 01
000                             CONSTANT tx_full_pwm_gauge, 02
000                             CONSTANT rx_half_full_pwm_gauge, 04
000                             CONSTANT rx_full_pwm_gauge, 08
000                             CONSTANT rx_data_present_pwm_gauge, 10

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             CONSTANT tx_half_full_sseg, 01
000                             CONSTANT tx_full_sseg, 02

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 01
000                             CONSTANT tx_full_led, 02

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character

000                             CONSTANT led_address, 00
000                             CONSTANT led_value, 01

000                 initialize:
000  3C000                      DISABLE INTERRUPT

001               program_loop:
001  300C7                      CALL read_from_UART_user
002  300B5                      CALL send_to_UART_user
003  14F6C                      COMPARE UART_data_user, character_l
004  35008                      JUMP Z, handle_led
005  14F73                      COMPARE UART_data_user, character_s
006  3501C                      JUMP Z, handle_sseg
007  340A4                      JUMP print_error_message

008                 handle_led:
008  30052                      CALL receive_led_address
009  14001                      COMPARE s0, 01
00A  350B3                      JUMP Z, error_routine

00B  3005F                      CALL ascii_to_digit
00C  14001                      COMPARE s0, 01
00D  350B3                      JUMP Z, error_routine

00E  2EF00                      STORE UART_data_user, led_address

00F  300C7                      CALL read_from_UART_user
010  300B5                      CALL send_to_UART_user
011  14F76                      COMPARE UART_data_user, character_v
012  354B3                      JUMP NZ, error_routine

013  30026                      CALL receive_led_number
014                             ;error handling here
014  2EE01                      STORE UART_data_led, led_value

015  06E00                      FETCH UART_data_led, led_address
016  300C1                      CALL send_to_UART_led

017  06E01                      FETCH UART_data_led, led_value
018  300C1                      CALL send_to_UART_led

019  00F20                      LOAD UART_data_user, character_space
01A  300B5                      CALL send_to_UART_user

01B  34001                      JUMP program_loop

01C                handle_sseg:
01C  30052                      CALL receive_led_address
01D  14001                      COMPARE s0, 01
01E  350B3                      JUMP Z, error_routine

01F  01CF0                      LOAD UART_data_pwm_gauge, UART_data_user
020  300CD                      CALL send_to_UART_pwm_gauge

021  300D3                      CALL read_from_UART_pwm
022  30094                      CALL send_to_sseg

023  00F20                      LOAD UART_data_user, character_space
024  300B5                      CALL send_to_UART_user
025  34001                      JUMP program_loop

026         receive_led_number:
026  00E00                      LOAD UART_data_led, 00

027  30037                      CALL receive_digit
028  3005F                      CALL ascii_to_digit
029  015F0                      LOAD multiplicand, UART_data_user
02A  00464                      LOAD multiplier, 64
02B  300D9                      CALL multiply
02C  19E10                      ADD UART_data_led, result_lsb

02D  30037                      CALL receive_digit
02E  3005F                      CALL ascii_to_digit
02F  015F0                      LOAD multiplicand, UART_data_user
030  0040A                      LOAD multiplier, 0A
031  300D9                      CALL multiply
032  19E10                      ADD UART_data_led, result_lsb

033  30037                      CALL receive_digit
034  3005F                      CALL ascii_to_digit
035  19EF0                      ADD UART_data_led, UART_data_user
036  2A000                      RETURN

037              receive_digit:
037  300C7                      CALL read_from_UART_user
038  300B5                      CALL send_to_UART_user
039  14F30                      COMPARE UART_data_user, 30
03A  3504E                      JUMP Z, digit_received
03B  14F31                      COMPARE UART_data_user, 31
03C  3504E                      JUMP Z, digit_received
03D  14F32                      COMPARE UART_data_user, 32
03E  3504E                      JUMP Z, digit_received
03F  14F33                      COMPARE UART_data_user, 33
040  3504E                      JUMP Z, digit_received
041  14F34                      COMPARE UART_data_user, 34
042  3504E                      JUMP Z, digit_received
043  14F35                      COMPARE UART_data_user, 35
044  3504E                      JUMP Z, digit_received
045  14F36                      COMPARE UART_data_user, 36
046  3504E                      JUMP Z, digit_received
047  14F37                      COMPARE UART_data_user, 37
048  3504E                      JUMP Z, digit_received
049  14F38                      COMPARE UART_data_user, 38
04A  3504E                      JUMP Z, digit_received
04B  14F39                      COMPARE UART_data_user, 39
04C  3504E                      JUMP Z, digit_received
04D  34050                      JUMP digit_error
04E  00000      digit_received: LOAD s0, 00
04F  2A000                      RETURN

050  00001         digit_error: LOAD s0, 01
051  2A000                      RETURN

052        receive_led_address:
052  300C7                      CALL read_from_UART_user
053  300B5                      CALL send_to_UART_user
054  14F31                      COMPARE UART_data_user, 31
055  3505B                      JUMP Z, address_received
056  14F32                      COMPARE UART_data_user, 32
057  3505B                      JUMP Z, address_received
058  14F33                      COMPARE UART_data_user, 33
059  3505B                      JUMP Z, address_received
05A  3405D                      JUMP address_error
05B  00000    address_received: LOAD s0, 00
05C  2A000                      RETURN

05D  00001       address_error: LOAD s0, 01
05E  2A000                      RETURN

05F             ascii_to_digit:
05F  14F30                      COMPARE UART_data_user, 30
060  35074                      JUMP Z, zero_received
061  14F31                      COMPARE UART_data_user, 31
062  35077                      JUMP Z, one_received
063  14F32                      COMPARE UART_data_user, 32
064  3507A                      JUMP Z, two_received
065  14F33                      COMPARE UART_data_user, 33
066  3507D                      JUMP Z, three_received
067  14F34                      COMPARE UART_data_user, 34
068  35080                      JUMP Z, four_received
069  14F35                      COMPARE UART_data_user, 35
06A  35083                      JUMP Z, five_received
06B  14F36                      COMPARE UART_data_user, 36
06C  35086                      JUMP Z, six_received
06D  14F37                      COMPARE UART_data_user, 37
06E  35089                      JUMP Z, seven_received
06F  14F38                      COMPARE UART_data_user, 38
070  3508C                      JUMP Z, eight_received
071  14F39                      COMPARE UART_data_user, 39
072  3508F                      JUMP Z, nine_received

073  34092                      JUMP ascii_to_digit_error

074  00F00       zero_received: LOAD UART_data_user, 00
075  00000                      LOAD s0, 00
076  2A000                      RETURN
077  00F01        one_received: LOAD UART_data_user, 01
078  00000                      LOAD s0, 00
079  2A000                      RETURN
07A  00F02        two_received: LOAD UART_data_user, 02
07B  00000                      LOAD s0, 00
07C  2A000                      RETURN
07D  00F03      three_received: LOAD UART_data_user, 03
07E  00000                      LOAD s0, 00
07F  2A000                      RETURN
080  00F04       four_received: LOAD UART_data_user, 04
081  00000                      LOAD s0, 00
082  2A000                      RETURN
083  00F05       five_received: LOAD UART_data_user, 05
084  00000                      LOAD s0, 00
085  2A000                      RETURN
086  00F06        six_received: LOAD UART_data_user, 06
087  00000                      LOAD s0, 00
088  2A000                      RETURN
089  00F07      seven_received: LOAD UART_data_user, 07
08A  00000                      LOAD s0, 00
08B  2A000                      RETURN
08C  00F08      eight_received: LOAD UART_data_user, 08
08D  00000                      LOAD s0, 00
08E  2A000                      RETURN
08F  00F09       nine_received: LOAD UART_data_user, 09
090  00000                      LOAD s0, 00
091  2A000                      RETURN

092  00001 ascii_to_digit_error: LOAD s0, 01
093  2A000                      RETURN

094               send_to_sseg:
094  01AC0                      LOAD dividend, UART_data_pwm_gauge
095  00964                      LOAD divisor, 64
096  300E4                      CALL divide
097  01D80                      LOAD UART_data_sseg, quotient
098  300BB                      CALL send_to_UART_sseg

099  01A70                      LOAD dividend, remainder
09A  0090A                      LOAD divisor, 0A
09B  300E4                      CALL divide
09C  01D80                      LOAD UART_data_sseg, quotient
09D  300BB                      CALL send_to_UART_sseg

09E  01A70                      LOAD dividend, remainder
09F  00901                      LOAD divisor, 01
0A0  300E4                      CALL divide
0A1  01D80                      LOAD UART_data_sseg, quotient
0A2  300BB                      CALL send_to_UART_sseg

0A3  2A000                      RETURN

0A4        print_error_message:
0A4  00F20                      LOAD UART_data_user, character_space
0A5  300B5                      CALL send_to_UART_user
0A6  00F65                      LOAD UART_data_user, character_e
0A7  300B5                      CALL send_to_UART_user
0A8  00F72                      LOAD UART_data_user, character_r
0A9  300B5                      CALL send_to_UART_user
0AA  00F72                      LOAD UART_data_user, character_r
0AB  300B5                      CALL send_to_UART_user
0AC  00F6F                      LOAD UART_data_user, character_o
0AD  300B5                      CALL send_to_UART_user
0AE  00F72                      LOAD UART_data_user, character_r
0AF  300B5                      CALL send_to_UART_user
0B0  00F20                      LOAD UART_data_user, character_space
0B1  300B5                      CALL send_to_UART_user
0B2  2A000                      RETURN

0B3  300A4       error_routine: CALL print_error_message
0B4  34001                      JUMP program_loop


0B5          send_to_UART_user:
0B5  04001                      INPUT s0, UART_status_port_user
0B6  12002                      TEST s0, tx_full_user
0B7  350B9                      JUMP Z, UART_write_user
0B8  340B5                      JUMP send_to_UART_user
0B9            UART_write_user:
0B9  2CF01                      OUTPUT UART_data_user, UART_write_port_user
0BA  2A000                      RETURN

0BB          send_to_UART_sseg:
0BB  04010                      INPUT s0, UART_status_port_sseg
0BC  12002                      TEST s0, tx_full_sseg
0BD  350BF                      JUMP Z, UART_write_sseg
0BE  340BB                      JUMP send_to_UART_sseg
0BF            UART_write_sseg:
0BF  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
0C0  2A000                      RETURN


0C1           send_to_UART_led:
0C1  04020                      INPUT s0, UART_status_port_led
0C2  12002                      TEST s0, tx_full_led
0C3  350C5                      JUMP Z, UART_write_led
0C4  340C1                      JUMP send_to_UART_led
0C5             UART_write_led:
0C5  2CE04                      OUTPUT UART_data_led, UART_write_port_led
0C6  2A000                      RETURN


0C7        read_from_UART_user:
0C7  04001                      INPUT s0, UART_status_port_user
0C8  12010                      TEST s0, rx_data_present_user
0C9  354CB                      JUMP NZ, read_number
0CA  340C7                      JUMP read_from_UART_user
0CB                read_number:
0CB  04F02                      INPUT UART_data_user, UART_read_port_user
0CC  2A000                      RETURN

0CD        send_to_UART_pwm_gauge:
0CD  04004                      INPUT s0, UART_status_port_pwm_gauge
0CE  12002                      TEST s0, tx_full_pwm_gauge
0CF  350D1                      JUMP Z, UART_write_pwm_gauge
0D0  340CD                      JUMP send_to_UART_pwm_gauge
0D1        UART_write_pwm_gauge:
0D1  2CC08                      OUTPUT UART_data_pwm_gauge, UART_write_port_pwm_gauge
0D2  2A000                      RETURN

0D3         read_from_UART_pwm:
0D3  04004                      INPUT s0, UART_status_port_pwm_gauge
0D4  12010                      TEST s0, rx_data_present_pwm_gauge
0D5  354D7                      JUMP NZ, read_pwm_number
0D6  340D3                      JUMP read_from_UART_pwm
0D7            read_pwm_number:
0D7  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
0D8  2A000                      RETURN


0D9                   multiply:
0D9  00301                      LOAD bit_mask, 01
0DA  00200                      LOAD result_msb, 00
0DB  00100                      LOAD result_lsb, 00
0DC                  mult_loop:
0DC  13430                      TEST multiplier, bit_mask
0DD  350DF                      JUMP Z, no_add
0DE  19250                      ADD result_msb, multiplicand
0DF                     no_add:
0DF  20208                      SRA result_msb
0E0  20108                      SRA result_lsb
0E1  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
0E2  354DC                      JUMP NZ, mult_loop
0E3  2A000                      RETURN



0E4                     divide:
0E4  00700                      LOAD remainder, 00
0E5  00380                      LOAD bit_mask, 80
0E6              division_loop:
0E6  13A30                      TEST dividend, bit_mask
0E7  20700                      SLA remainder
0E8  20806                      SL0 quotient
0E9  15790                      COMPARE remainder, divisor
0EA  358ED                      JUMP C, no_sub
0EB  1D790                      SUB remainder, divisor
0EC  18801                      ADD quotient, 01
0ED                     no_sub:
0ED  2030E                      SR0 bit_mask
0EE  354E6                      JUMP NZ, division_loop
0EF  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_pwm_gauge   08     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
    character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
 *  character_n                 6E     uart_kcpsm3.psm
    character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
    character_r                 72     uart_kcpsm3.psm
    character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
    character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
    character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               04
    datestamp_month             08
    datestamp_year              13
    led_address                 00     uart_kcpsm3.psm
    led_value                   01     uart_kcpsm3.psm
    rx_data_present_pwm_gauge   10     uart_kcpsm3.psm
    rx_data_present_user        10     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           08     uart_kcpsm3.psm
 *  rx_full_user                08     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      04     uart_kcpsm3.psm
 *  rx_half_full_user           04     uart_kcpsm3.psm
    timestamp_hours             12
    timestamp_minutes           10
    timestamp_seconds           05
    tx_full_led                 02     uart_kcpsm3.psm
    tx_full_pwm_gauge           02     uart_kcpsm3.psm
    tx_full_sseg                02     uart_kcpsm3.psm
    tx_full_user                02     uart_kcpsm3.psm
 *  tx_half_full_led            01     uart_kcpsm3.psm
 *  tx_half_full_pwm_gauge      01     uart_kcpsm3.psm
 *  tx_half_full_sseg           01     uart_kcpsm3.psm
 *  tx_half_full_user           01     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "04 Aug 2019"
    timestamp$   "18:16:05"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    UART_write_led          0C5   uart_kcpsm3.psm
    UART_write_pwm_gauge    0D1   uart_kcpsm3.psm
    UART_write_sseg         0BF   uart_kcpsm3.psm
    UART_write_user         0B9   uart_kcpsm3.psm
    address_error           05D   uart_kcpsm3.psm
    address_received        05B   uart_kcpsm3.psm
    ascii_to_digit          05F   uart_kcpsm3.psm
    ascii_to_digit_error    092   uart_kcpsm3.psm
    digit_error             050   uart_kcpsm3.psm
    digit_received          04E   uart_kcpsm3.psm
    divide                  0E4   uart_kcpsm3.psm
    division_loop           0E6   uart_kcpsm3.psm
    eight_received          08C   uart_kcpsm3.psm
    error_routine           0B3   uart_kcpsm3.psm
    five_received           083   uart_kcpsm3.psm
    four_received           080   uart_kcpsm3.psm
    handle_led              008   uart_kcpsm3.psm
    handle_sseg             01C   uart_kcpsm3.psm
 *  initialize              000   uart_kcpsm3.psm
    mult_loop               0DC   uart_kcpsm3.psm
    multiply                0D9   uart_kcpsm3.psm
    nine_received           08F   uart_kcpsm3.psm
    no_add                  0DF   uart_kcpsm3.psm
    no_sub                  0ED   uart_kcpsm3.psm
    one_received            077   uart_kcpsm3.psm
    print_error_message     0A4   uart_kcpsm3.psm
    program_loop            001   uart_kcpsm3.psm
    read_from_UART_pwm      0D3   uart_kcpsm3.psm
    read_from_UART_user     0C7   uart_kcpsm3.psm
    read_number             0CB   uart_kcpsm3.psm
    read_pwm_number         0D7   uart_kcpsm3.psm
    receive_digit           037   uart_kcpsm3.psm
    receive_led_address     052   uart_kcpsm3.psm
    receive_led_number      026   uart_kcpsm3.psm
    send_to_UART_led        0C1   uart_kcpsm3.psm
    send_to_UART_pwm_gauge  0CD   uart_kcpsm3.psm
    send_to_UART_sseg       0BB   uart_kcpsm3.psm
    send_to_UART_user       0B5   uart_kcpsm3.psm
    send_to_sseg            094   uart_kcpsm3.psm
    seven_received          089   uart_kcpsm3.psm
    six_received            086   uart_kcpsm3.psm
    three_received          07D   uart_kcpsm3.psm
    two_received            07A   uart_kcpsm3.psm
    zero_received           074   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          5
   ADDCY        -
   AND          -
   CALL         41
   COMPARE      30
   DISABLE      1
   ENABLE       -
   FETCH        2
   INPUT        8
   JUMP         52
   LOAD         54
   OR           -
   OUTPUT       4
   RETURN       26
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        2
   SUB          1
   SUBCY        -
   TEST         8
   XOR          -

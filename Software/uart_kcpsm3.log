Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-07-28T16:29:47
  PicoBlaze-3 mode

  Last occupied address: 0D2 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 211
  Memory locations available: 813
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 01
000                             CONSTANT tx_full_user, 02
000                             CONSTANT rx_half_full_user, 04
000                             CONSTANT rx_full_user, 08
000                             CONSTANT rx_data_present_user, 10

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT UART_write_port_pwm_gauge, 08
000                             CONSTANT tx_half_full_pwm_gauge, 01
000                             CONSTANT tx_full_pwm_gauge, 02
000                             CONSTANT rx_half_full_pwm_gauge, 04
000                             CONSTANT rx_full_pwm_gauge, 08
000                             CONSTANT rx_data_present_pwm_gauge, 10

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             CONSTANT tx_half_full_sseg, 01
000                             CONSTANT tx_full_sseg, 02

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 01
000                             CONSTANT tx_full_led, 02

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character

000                             CONSTANT operation_status, 00
000                             CONSTANT pwm_one, 01
000                             CONSTANT pwm_two, 02
000                             CONSTANT pwm_three, 03



000                 initialize:
000  3C000                      DISABLE INTERRUPT

001               program_loop:
001  300AA                      CALL read_from_UART_user
002  30098                      CALL send_to_UART_user
003  14F6C                      COMPARE UART_data_user, character_l
004  35008                      JUMP Z, handle_led
005  14F73                      COMPARE UART_data_user, character_s
006  35015                      JUMP Z, handle_sseg
007  34089                      JUMP print_error_message

008                 handle_led:
008  30046                      CALL receive_led_address
009  30050                      CALL ascii_to_digit
00A  01EF0                      LOAD UART_data_led, UART_data_user
00B  300A4                      CALL send_to_UART_led

00C  300AA                      CALL read_from_UART_user
00D  30098                      CALL send_to_UART_user
00E  14F76                      COMPARE UART_data_user, character_v
00F  35489                      JUMP NZ, print_error_message

010  3001D                      CALL receive_led_number
011  300A4                      CALL send_to_UART_led

012  00F20                      LOAD UART_data_user, character_space
013  30098                      CALL send_to_UART_user
014  34001                      JUMP program_loop

015                handle_sseg:
015  30046                      CALL receive_led_address
016  01CF0                      LOAD UART_data_pwm_gauge, UART_data_user
017  300B0                      CALL send_to_UART_pwm_gauge

018  300B6                      CALL read_from_UART_pwm
019  30079                      CALL send_to_sseg

01A  00F20                      LOAD UART_data_user, character_space
01B  30098                      CALL send_to_UART_user
01C  34001                      JUMP program_loop

01D         receive_led_number:
01D  00E00                      LOAD UART_data_led, 00

01E  3002E                      CALL receive_digit
01F  30050                      CALL ascii_to_digit
020  015F0                      LOAD multiplicand, UART_data_user
021  00464                      LOAD multiplier, 64
022  300BC                      CALL multiply
023  19E10                      ADD UART_data_led, result_lsb

024  3002E                      CALL receive_digit
025  30050                      CALL ascii_to_digit
026  015F0                      LOAD multiplicand, UART_data_user
027  0040A                      LOAD multiplier, 0A
028  300BC                      CALL multiply
029  19E10                      ADD UART_data_led, result_lsb

02A  3002E                      CALL receive_digit
02B  30050                      CALL ascii_to_digit
02C  19EF0                      ADD UART_data_led, UART_data_user
02D  2A000                      RETURN

02E              receive_digit:
02E  300AA                      CALL read_from_UART_user
02F  30098                      CALL send_to_UART_user
030  14F30                      COMPARE UART_data_user, 30
031  35045                      JUMP Z, digit_received
032  14F31                      COMPARE UART_data_user, 31
033  35045                      JUMP Z, digit_received
034  14F32                      COMPARE UART_data_user, 32
035  35045                      JUMP Z, digit_received
036  14F33                      COMPARE UART_data_user, 33
037  35045                      JUMP Z, digit_received
038  14F34                      COMPARE UART_data_user, 34
039  35045                      JUMP Z, digit_received
03A  14F35                      COMPARE UART_data_user, 35
03B  35045                      JUMP Z, digit_received
03C  14F36                      COMPARE UART_data_user, 36
03D  35045                      JUMP Z, digit_received
03E  14F37                      COMPARE UART_data_user, 37
03F  35045                      JUMP Z, digit_received
040  14F38                      COMPARE UART_data_user, 38
041  35045                      JUMP Z, digit_received
042  14F39                      COMPARE UART_data_user, 39
043  35045                      JUMP Z, digit_received
044  34089                      JUMP print_error_message
045  2A000      digit_received: RETURN

046        receive_led_address:
046  300AA                      CALL read_from_UART_user
047  30098                      CALL send_to_UART_user
048  14F31                      COMPARE UART_data_user, 31
049  3504F                      JUMP Z, address_received
04A  14F32                      COMPARE UART_data_user, 32
04B  3504F                      JUMP Z, address_received
04C  14F33                      COMPARE UART_data_user, 33
04D  3504F                      JUMP Z, address_received
04E  34089                      JUMP print_error_message
04F  2A000    address_received: RETURN

050             ascii_to_digit:
050  14F30                      COMPARE UART_data_user, 30
051  35065                      JUMP Z, zero_received
052  14F31                      COMPARE UART_data_user, 31
053  35067                      JUMP Z, one_received
054  14F32                      COMPARE UART_data_user, 32
055  35069                      JUMP Z, two_received
056  14F33                      COMPARE UART_data_user, 33
057  3506B                      JUMP Z, three_received
058  14F34                      COMPARE UART_data_user, 34
059  3506D                      JUMP Z, four_received
05A  14F35                      COMPARE UART_data_user, 35
05B  3506F                      JUMP Z, five_received
05C  14F36                      COMPARE UART_data_user, 36
05D  35071                      JUMP Z, six_received
05E  14F37                      COMPARE UART_data_user, 37
05F  35073                      JUMP Z, seven_received
060  14F38                      COMPARE UART_data_user, 38
061  35075                      JUMP Z, eight_received
062  14F39                      COMPARE UART_data_user, 39
063  35077                      JUMP Z, nine_received
064  34089                      JUMP print_error_message

065  00F00       zero_received: LOAD UART_data_user, 00
066  2A000                      RETURN
067  00F01        one_received: LOAD UART_data_user, 01
068  2A000                      RETURN
069  00F02        two_received: LOAD UART_data_user, 02
06A  2A000                      RETURN
06B  00F03      three_received: LOAD UART_data_user, 03
06C  2A000                      RETURN
06D  00F04       four_received: LOAD UART_data_user, 04
06E  2A000                      RETURN
06F  00F05       five_received: LOAD UART_data_user, 05
070  2A000                      RETURN
071  00F06        six_received: LOAD UART_data_user, 06
072  2A000                      RETURN
073  00F07      seven_received: LOAD UART_data_user, 07
074  2A000                      RETURN
075  00F08      eight_received: LOAD UART_data_user, 08
076  2A000                      RETURN
077  00F09       nine_received: LOAD UART_data_user, 09
078  2A000                      RETURN

079               send_to_sseg:
079  01AC0                      LOAD dividend, UART_data_pwm_gauge
07A  00964                      LOAD divisor, 64
07B  300C7                      CALL divide
07C  01D80                      LOAD UART_data_sseg, quotient
07D  3009E                      CALL send_to_UART_sseg

07E  01A70                      LOAD dividend, remainder
07F  0090A                      LOAD divisor, 0A
080  300C7                      CALL divide
081  01D80                      LOAD UART_data_sseg, quotient
082  3009E                      CALL send_to_UART_sseg

083  01A70                      LOAD dividend, remainder
084  00901                      LOAD divisor, 01
085  300C7                      CALL divide
086  01D80                      LOAD UART_data_sseg, quotient
087  3009E                      CALL send_to_UART_sseg

088  2A000                      RETURN

089        print_error_message:
089  00F20                      LOAD UART_data_user, character_space
08A  30098                      CALL send_to_UART_user
08B  00F65                      LOAD UART_data_user, character_e
08C  30098                      CALL send_to_UART_user
08D  00F72                      LOAD UART_data_user, character_r
08E  30098                      CALL send_to_UART_user
08F  00F72                      LOAD UART_data_user, character_r
090  30098                      CALL send_to_UART_user
091  00F6F                      LOAD UART_data_user, character_o
092  30098                      CALL send_to_UART_user
093  00F72                      LOAD UART_data_user, character_r
094  30098                      CALL send_to_UART_user
095  00F20                      LOAD UART_data_user, character_space
096  30098                      CALL send_to_UART_user
097  34001                      JUMP program_loop



098          send_to_UART_user:
098  04001                      INPUT s0, UART_status_port_user
099  12002                      TEST s0, tx_full_user
09A  3509C                      JUMP Z, UART_write_user
09B  34098                      JUMP send_to_UART_user
09C            UART_write_user:
09C  2CF01                      OUTPUT UART_data_user, UART_write_port_user
09D  2A000                      RETURN

09E          send_to_UART_sseg:
09E  04010                      INPUT s0, UART_status_port_sseg
09F  12002                      TEST s0, tx_full_sseg
0A0  350A2                      JUMP Z, UART_write_sseg
0A1  3409E                      JUMP send_to_UART_sseg
0A2            UART_write_sseg:
0A2  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
0A3  2A000                      RETURN


0A4           send_to_UART_led:
0A4  04020                      INPUT s0, UART_status_port_led
0A5  12002                      TEST s0, tx_full_led
0A6  350A8                      JUMP Z, UART_write_led
0A7  340A4                      JUMP send_to_UART_led
0A8             UART_write_led:
0A8  2CE04                      OUTPUT UART_data_led, UART_write_port_led
0A9  2A000                      RETURN


0AA        read_from_UART_user:
0AA  04001                      INPUT s0, UART_status_port_user
0AB  12010                      TEST s0, rx_data_present_user
0AC  354AE                      JUMP NZ, read_number
0AD  340AA                      JUMP read_from_UART_user
0AE                read_number:
0AE  04F02                      INPUT UART_data_user, UART_read_port_user
0AF  2A000                      RETURN

0B0        send_to_UART_pwm_gauge:
0B0  04004                      INPUT s0, UART_status_port_pwm_gauge
0B1  12002                      TEST s0, tx_full_pwm_gauge
0B2  350B4                      JUMP Z, UART_write_pwm_gauge
0B3  340B0                      JUMP send_to_UART_pwm_gauge
0B4        UART_write_pwm_gauge:
0B4  2CC08                      OUTPUT UART_data_pwm_gauge, UART_write_port_pwm_gauge
0B5  2A000                      RETURN

0B6         read_from_UART_pwm:
0B6  04004                      INPUT s0, UART_status_port_pwm_gauge
0B7  12010                      TEST s0, rx_data_present_pwm_gauge
0B8  354BA                      JUMP NZ, read_pwm_number
0B9  340B6                      JUMP read_from_UART_pwm
0BA            read_pwm_number:
0BA  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
0BB  2A000                      RETURN


0BC                   multiply:
0BC  00301                      LOAD bit_mask, 01
0BD  00200                      LOAD result_msb, 00
0BE  00100                      LOAD result_lsb, 00
0BF                  mult_loop:
0BF  13430                      TEST multiplier, bit_mask
0C0  350C2                      JUMP Z, no_add
0C1  19250                      ADD result_msb, multiplicand
0C2                     no_add:
0C2  20208                      SRA result_msb
0C3  20108                      SRA result_lsb
0C4  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
0C5  354BF                      JUMP NZ, mult_loop
0C6  2A000                      RETURN



0C7                     divide:
0C7  00700                      LOAD remainder, 00
0C8  00380                      LOAD bit_mask, 80
0C9              division_loop:
0C9  13A30                      TEST dividend, bit_mask
0CA  20700                      SLA remainder
0CB  20806                      SL0 quotient
0CC  15790                      COMPARE remainder, divisor
0CD  358D0                      JUMP C, no_sub
0CE  1D790                      SUB remainder, divisor
0CF  18801                      ADD quotient, 01
0D0                     no_sub:
0D0  2030E                      SR0 bit_mask
0D1  354C9                      JUMP NZ, division_loop
0D2  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_pwm_gauge   08     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
    character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
 *  character_n                 6E     uart_kcpsm3.psm
    character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
    character_r                 72     uart_kcpsm3.psm
    character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
    character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
    character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               1C
    datestamp_month             07
    datestamp_year              13
 *  operation_status            00     uart_kcpsm3.psm
 *  pwm_one                     01     uart_kcpsm3.psm
 *  pwm_three                   03     uart_kcpsm3.psm
 *  pwm_two                     02     uart_kcpsm3.psm
    rx_data_present_pwm_gauge   10     uart_kcpsm3.psm
    rx_data_present_user        10     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           08     uart_kcpsm3.psm
 *  rx_full_user                08     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      04     uart_kcpsm3.psm
 *  rx_half_full_user           04     uart_kcpsm3.psm
    timestamp_hours             10
    timestamp_minutes           1D
    timestamp_seconds           2F
    tx_full_led                 02     uart_kcpsm3.psm
    tx_full_pwm_gauge           02     uart_kcpsm3.psm
    tx_full_sseg                02     uart_kcpsm3.psm
    tx_full_user                02     uart_kcpsm3.psm
 *  tx_half_full_led            01     uart_kcpsm3.psm
 *  tx_half_full_pwm_gauge      01     uart_kcpsm3.psm
 *  tx_half_full_sseg           01     uart_kcpsm3.psm
 *  tx_half_full_user           01     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "28 Jul 2019"
    timestamp$   "16:29:47"


List of line labels
-------------------
    Label                   Addr  Source PSM file
 --------                   ----  ---------------
    UART_write_led          0A8   uart_kcpsm3.psm
    UART_write_pwm_gauge    0B4   uart_kcpsm3.psm
    UART_write_sseg         0A2   uart_kcpsm3.psm
    UART_write_user         09C   uart_kcpsm3.psm
    address_received        04F   uart_kcpsm3.psm
    ascii_to_digit          050   uart_kcpsm3.psm
    digit_received          045   uart_kcpsm3.psm
    divide                  0C7   uart_kcpsm3.psm
    division_loop           0C9   uart_kcpsm3.psm
    eight_received          075   uart_kcpsm3.psm
    five_received           06F   uart_kcpsm3.psm
    four_received           06D   uart_kcpsm3.psm
    handle_led              008   uart_kcpsm3.psm
    handle_sseg             015   uart_kcpsm3.psm
 *  initialize              000   uart_kcpsm3.psm
    mult_loop               0BF   uart_kcpsm3.psm
    multiply                0BC   uart_kcpsm3.psm
    nine_received           077   uart_kcpsm3.psm
    no_add                  0C2   uart_kcpsm3.psm
    no_sub                  0D0   uart_kcpsm3.psm
    one_received            067   uart_kcpsm3.psm
    print_error_message     089   uart_kcpsm3.psm
    program_loop            001   uart_kcpsm3.psm
    read_from_UART_pwm      0B6   uart_kcpsm3.psm
    read_from_UART_user     0AA   uart_kcpsm3.psm
    read_number             0AE   uart_kcpsm3.psm
    read_pwm_number         0BA   uart_kcpsm3.psm
    receive_digit           02E   uart_kcpsm3.psm
    receive_led_address     046   uart_kcpsm3.psm
    receive_led_number      01D   uart_kcpsm3.psm
    send_to_UART_led        0A4   uart_kcpsm3.psm
    send_to_UART_pwm_gauge  0B0   uart_kcpsm3.psm
    send_to_UART_sseg       09E   uart_kcpsm3.psm
    send_to_UART_user       098   uart_kcpsm3.psm
    send_to_sseg            079   uart_kcpsm3.psm
    seven_received          073   uart_kcpsm3.psm
    six_received            071   uart_kcpsm3.psm
    three_received          06B   uart_kcpsm3.psm
    two_received            069   uart_kcpsm3.psm
    zero_received           065   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          5
   ADDCY        -
   AND          -
   CALL         40
   COMPARE      27
   DISABLE      1
   ENABLE       -
   FETCH        -
   INPUT        8
   JUMP         49
   LOAD         40
   OR           -
   OUTPUT       4
   RETURN       22
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        -
   SUB          1
   SUBCY        -
   TEST         8
   XOR          -

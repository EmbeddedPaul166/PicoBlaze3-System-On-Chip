Open PicoBlaze Assembler log for program "uart_kcpsm3.psm"
Generated by opbasm v1.3
  Assembled on 2019-07-21T22:31:49
  PicoBlaze-3 mode

  Last occupied address: 080 hex
  Nominal program memory size: 1K (1024)  address(9:0)
  Actual memory size: 1024
  Occupied memory locations: 129
  Memory locations available: 895
  Scratchpad size: 64


Assembly listing
----------------
000                             ;Declare necessary constants used

000                             ;   KCPSM3-USER
000                             CONSTANT UART_status_port_user, 01
000                             CONSTANT UART_read_port_user, 02
000                             CONSTANT UART_write_port_user, 01
000                             CONSTANT tx_half_full_user, 00
000                             CONSTANT tx_full_user, 01
000                             CONSTANT rx_half_full_user, 02
000                             CONSTANT rx_full_user, 03
000                             CONSTANT rx_data_present_user, 04

000                             ;   PWM_GAUGE-KCPSM3
000                             CONSTANT UART_status_port_pwm_gauge, 04
000                             CONSTANT UART_read_port_pwm_gauge, 08
000                             CONSTANT rx_half_full_pwm_gauge, 00
000                             CONSTANT rx_full_pwm_gauge, 01
000                             CONSTANT rx_data_present_pwm_gauge, 02

000                             ;   KCPSM3-SSEG
000                             CONSTANT UART_status_port_sseg, 10
000                             CONSTANT UART_write_port_sseg, 02
000                             ;CONSTANT UART_write_sseg, 40
000                             CONSTANT tx_half_full_sseg, 00
000                             CONSTANT tx_full_sseg, 01

000                             ;   KCPSM3-LED
000                             CONSTANT UART_status_port_led, 20
000                             CONSTANT UART_write_port_led, 04
000                             CONSTANT tx_half_full_led, 00
000                             CONSTANT tx_full_led, 01

000                             NAMEREG sf, UART_data_user     ;used to pass data to and from the UART
000                             NAMEREG se, UART_data_led
000                             NAMEREG sd, UART_data_sseg
000                             NAMEREG sc, UART_data_pwm_gauge

000                             NAMEREG sb, store_pointer      ;used to pass location of data in scratch pad memory

000                             NAMEREG sa, dividend           ; preserved
000                             NAMEREG s9, divisor            ; preserved
000                             NAMEREG s8, quotient           ; preserved
000                             NAMEREG s7, remainder          ; modified
000                             NAMEREG s6, bit_mask           ; used to test bits in dividend

000                             NAMEREG s5, multiplicand
000                             NAMEREG s4, multiplier
000                             NAMEREG s3, bit_mask
000                             NAMEREG s2, result_msb
000                             NAMEREG s1, result_lsb

000                             ;ASCII table

000                             CONSTANT character_a, 61
000                             CONSTANT character_b, 62
000                             CONSTANT character_c, 63
000                             CONSTANT character_d, 64
000                             CONSTANT character_e, 65
000                             CONSTANT character_f, 66
000                             CONSTANT character_g, 67
000                             CONSTANT character_h, 68
000                             CONSTANT character_i, 69
000                             CONSTANT character_j, 6A
000                             CONSTANT character_k, 6B
000                             CONSTANT character_l, 6C
000                             CONSTANT character_m, 6D
000                             CONSTANT character_n, 6E
000                             CONSTANT character_o, 6F
000                             CONSTANT character_p, 70
000                             CONSTANT character_q, 71
000                             CONSTANT character_r, 72
000                             CONSTANT character_s, 73
000                             CONSTANT character_t, 74
000                             CONSTANT character_u, 75
000                             CONSTANT character_v, 76
000                             CONSTANT character_w, 77
000                             CONSTANT character_x, 78
000                             CONSTANT character_y, 79
000                             CONSTANT character_z, 7A
000                             CONSTANT character_A, 41
000                             CONSTANT character_B, 42
000                             CONSTANT character_C, 43
000                             CONSTANT character_D, 44
000                             CONSTANT character_E, 45
000                             CONSTANT character_F, 46
000                             CONSTANT character_G, 47
000                             CONSTANT character_H, 48
000                             CONSTANT character_I, 49
000                             CONSTANT character_J, 4A
000                             CONSTANT character_K, 4B
000                             CONSTANT character_L, 4C
000                             CONSTANT character_M, 4D
000                             CONSTANT character_N, 4E
000                             CONSTANT character_O, 4F
000                             CONSTANT character_P, 50
000                             CONSTANT character_Q, 51
000                             CONSTANT character_R, 52
000                             CONSTANT character_S, 53
000                             CONSTANT character_T, 54
000                             CONSTANT character_U, 55
000                             CONSTANT character_V, 56
000                             CONSTANT character_W, 57
000                             CONSTANT character_X, 58
000                             CONSTANT character_Y, 59
000                             CONSTANT character_Z, 5A
000                             CONSTANT character_0, 30
000                             CONSTANT character_1, 31
000                             CONSTANT character_2, 32
000                             CONSTANT character_3, 33
000                             CONSTANT character_4, 34
000                             CONSTANT character_5, 35
000                             CONSTANT character_6, 36
000                             CONSTANT character_7, 37
000                             CONSTANT character_8, 38
000                             CONSTANT character_9, 39
000                             CONSTANT character_colon, 3A
000                             CONSTANT character_semi_colon, 3B
000                             CONSTANT character_less_than, 3C
000                             CONSTANT character_greater_than, 3E
000                             CONSTANT character_equals, 3D
000                             CONSTANT character_space, 20
000                             CONSTANT character_CR, 0D      ;carriage return
000                             CONSTANT character_question, 3F ;'?'
000                             CONSTANT character_dollar, 24
000                             CONSTANT character_BS, 08      ;Back Space command character


000                 initialize:
000  3C000                      DISABLE INTERRUPT
001                             ;   Program loop
001  00D05                      LOAD UART_data_sseg, 05
002  30052                      CALL send_to_UART_sseg
003  30052                      CALL send_to_UART_sseg
004  30052                      CALL send_to_UART_sseg
005  00EFF                      LOAD UART_data_led, FF
006  30058                      CALL send_to_UART_led
007  30058                      CALL send_to_UART_led
008  30058                      CALL send_to_UART_led
009               program_loop:
009  3005E                      CALL read_from_UART_user
00A  3004C                      CALL send_to_UART_user
00B  34009                      JUMP program_loop
00C  12F6C                      TEST UART_data_user, character_l
00D  35411                      JUMP NZ, handle_led
00E  12F6E                      TEST UART_data_user, character_n
00F  35414                      JUMP NZ, switch_sseg_led_value
010  34009                      JUMP program_loop
011                 handle_led:
011  30017                      CALL receive_led_number
012  30058                      CALL send_to_UART_led
013  34009                      JUMP program_loop
014        switch_sseg_led_value:
014  30064                      CALL read_from_UART_pwm
015  3003C                      CALL send_to_sseg
016  34009                      JUMP program_loop

017         receive_led_number:
017  00E00                      LOAD UART_data_led, 00

018  30025                      CALL receive_digit
019  015F0                      LOAD multiplicand, UART_data_user
01A  00464                      LOAD multiplier, 64
01B  3006A                      CALL multiply
01C  19E10                      ADD UART_data_led, result_lsb

01D  30025                      CALL receive_digit
01E  015F0                      LOAD multiplicand, UART_data_user
01F  0040A                      LOAD multiplier, 0A
020  3006A                      CALL multiply
021  19E10                      ADD UART_data_led, result_lsb

022  30025                      CALL receive_digit
023  19E10                      ADD UART_data_led, result_lsb
024  2A000                      RETURN

025              receive_digit:
025  3005E                      CALL read_from_UART_user
026  3004C                      CALL send_to_UART_user
027  12F00                      TEST UART_data_user, 00
028  35009                      JUMP Z, program_loop
029  12F01                      TEST UART_data_user, 01
02A  35009                      JUMP Z, program_loop
02B  12F02                      TEST UART_data_user, 02
02C  35009                      JUMP Z, program_loop
02D  12F03                      TEST UART_data_user, 03
02E  35009                      JUMP Z, program_loop
02F  12F04                      TEST UART_data_user, 04
030  35009                      JUMP Z, program_loop
031  12F05                      TEST UART_data_user, 05
032  35009                      JUMP Z, program_loop
033  12F06                      TEST UART_data_user, 06
034  35009                      JUMP Z, program_loop
035  12F07                      TEST UART_data_user, 07
036  35009                      JUMP Z, program_loop
037  12F08                      TEST UART_data_user, 08
038  35009                      JUMP Z, program_loop
039  12F09                      TEST UART_data_user, 09
03A  35009                      JUMP Z, program_loop
03B  2A000                      RETURN


03C               send_to_sseg:
03C  01AC0                      LOAD dividend, UART_data_pwm_gauge
03D  00964                      LOAD divisor, 64
03E  30075                      CALL divide
03F  01D80                      LOAD UART_data_sseg, quotient
040  30052                      CALL send_to_UART_sseg

041  01A70                      LOAD dividend, remainder
042  0090A                      LOAD divisor, 0A
043  30075                      CALL divide
044  01D80                      LOAD UART_data_sseg, quotient
045  30052                      CALL send_to_UART_sseg

046  01A70                      LOAD dividend, remainder
047  00901                      LOAD divisor, 01
048  30075                      CALL divide
049  01D80                      LOAD UART_data_sseg, quotient
04A  30052                      CALL send_to_UART_sseg

04B  2A000                      RETURN

04C          send_to_UART_user:
04C  04001                      INPUT s0, UART_status_port_user
04D  12001                      TEST s0, tx_full_user
04E  35050                      JUMP Z, UART_write_user
04F  3404C                      JUMP send_to_UART_user
050            UART_write_user:
050  2CF01                      OUTPUT UART_data_user, UART_write_port_user
051  2A000                      RETURN

052          send_to_UART_sseg:
052  04010                      INPUT s0, UART_status_port_sseg
053  12001                      TEST s0, tx_full_sseg
054  35056                      JUMP Z, UART_write_sseg
055  34052                      JUMP send_to_UART_sseg
056            UART_write_sseg:
056  2CD02                      OUTPUT UART_data_sseg, UART_write_port_sseg
057  2A000                      RETURN


058           send_to_UART_led:
058  04020                      INPUT s0, UART_status_port_led
059  12001                      TEST s0, tx_full_led
05A  3505C                      JUMP Z, UART_write_led
05B  34058                      JUMP send_to_UART_led
05C             UART_write_led:
05C  2CE04                      OUTPUT UART_data_led, UART_write_port_led
05D  2A000                      RETURN


05E        read_from_UART_user:
05E  04001                      INPUT s0, UART_status_port_user
05F  12004                      TEST s0, rx_data_present_user
060  35462                      JUMP NZ, read_number
061  3405E                      JUMP read_from_UART_user
062                read_number:
062  04F02                      INPUT UART_data_user, UART_read_port_user
063  2A000                      RETURN

064         read_from_UART_pwm:
064  04004                      INPUT s0, UART_status_port_pwm_gauge
065  12002                      TEST s0, rx_data_present_pwm_gauge
066  35468                      JUMP NZ, read_pwm_number
067  34064                      JUMP read_from_UART_pwm
068            read_pwm_number:
068  04C08                      INPUT UART_data_pwm_gauge, UART_read_port_pwm_gauge
069  2A000                      RETURN


06A                   multiply:
06A  00301                      LOAD bit_mask, 01
06B  00200                      LOAD result_msb, 00
06C  00100                      LOAD result_lsb, 00
06D                  mult_loop:
06D  13430                      TEST multiplier, bit_mask
06E  35070                      JUMP Z, no_add
06F  19250                      ADD result_msb, multiplicand
070                     no_add:
070  20208                      SRA result_msb
071  20108                      SRA result_lsb
072  20306                      SL0 bit_mask                   ; shift bit_mask left to examine
073  3546D                      JUMP NZ, mult_loop
074  2A000                      RETURN



075                     divide:
075  00700                      LOAD remainder, 00
076  00380                      LOAD bit_mask, 80
077              division_loop:
077  13A30                      TEST dividend, bit_mask
078  20700                      SLA remainder
079  20806                      SL0 quotient
07A  15790                      COMPARE remainder, divisor
07B  3587E                      JUMP C, no_sub
07C  1D790                      SUB remainder, divisor
07D  18801                      ADD quotient, 01
07E                     no_sub:
07E  2030E                      SR0 bit_mask
07F  35477                      JUMP NZ, division_loop
080  2A000                      RETURN



All unused memory locations contain zero (equivalent to "LOAD s0, 00")


PSM files that have been assembled
----------------------------------
    /home/paul/Documents/Laboratory_reports/PUR/PUR_Project/PUR_Project/Software/uart_kcpsm3.psm


List of defined constants
-------------------------
    CONSTANT name               Value  Source PSM file
 ----------------               -----  ---------------
    BEL                         07
    BS                          08
    CR                          0D
    DCS                         90
    DEL                         7F
    ESC                         1B
    HT                          09
    LF                          0A
    NUL                         00
    ST                          9C
    UART_read_port_pwm_gauge    08     uart_kcpsm3.psm
    UART_read_port_user         02     uart_kcpsm3.psm
    UART_status_port_led        20     uart_kcpsm3.psm
    UART_status_port_pwm_gauge  04     uart_kcpsm3.psm
    UART_status_port_sseg       10     uart_kcpsm3.psm
    UART_status_port_user       01     uart_kcpsm3.psm
    UART_write_port_led         04     uart_kcpsm3.psm
    UART_write_port_sseg        02     uart_kcpsm3.psm
    UART_write_port_user        01     uart_kcpsm3.psm
    VT                          0B
 *  character_0                 30     uart_kcpsm3.psm
 *  character_1                 31     uart_kcpsm3.psm
 *  character_2                 32     uart_kcpsm3.psm
 *  character_3                 33     uart_kcpsm3.psm
 *  character_4                 34     uart_kcpsm3.psm
 *  character_5                 35     uart_kcpsm3.psm
 *  character_6                 36     uart_kcpsm3.psm
 *  character_7                 37     uart_kcpsm3.psm
 *  character_8                 38     uart_kcpsm3.psm
 *  character_9                 39     uart_kcpsm3.psm
 *  character_A                 41     uart_kcpsm3.psm
 *  character_B                 42     uart_kcpsm3.psm
 *  character_BS                08     uart_kcpsm3.psm
 *  character_C                 43     uart_kcpsm3.psm
 *  character_CR                0D     uart_kcpsm3.psm
 *  character_D                 44     uart_kcpsm3.psm
 *  character_E                 45     uart_kcpsm3.psm
 *  character_F                 46     uart_kcpsm3.psm
 *  character_G                 47     uart_kcpsm3.psm
 *  character_H                 48     uart_kcpsm3.psm
 *  character_I                 49     uart_kcpsm3.psm
 *  character_J                 4A     uart_kcpsm3.psm
 *  character_K                 4B     uart_kcpsm3.psm
 *  character_L                 4C     uart_kcpsm3.psm
 *  character_M                 4D     uart_kcpsm3.psm
 *  character_N                 4E     uart_kcpsm3.psm
 *  character_O                 4F     uart_kcpsm3.psm
 *  character_P                 50     uart_kcpsm3.psm
 *  character_Q                 51     uart_kcpsm3.psm
 *  character_R                 52     uart_kcpsm3.psm
 *  character_S                 53     uart_kcpsm3.psm
 *  character_T                 54     uart_kcpsm3.psm
 *  character_U                 55     uart_kcpsm3.psm
 *  character_V                 56     uart_kcpsm3.psm
 *  character_W                 57     uart_kcpsm3.psm
 *  character_X                 58     uart_kcpsm3.psm
 *  character_Y                 59     uart_kcpsm3.psm
 *  character_Z                 5A     uart_kcpsm3.psm
 *  character_a                 61     uart_kcpsm3.psm
 *  character_b                 62     uart_kcpsm3.psm
 *  character_c                 63     uart_kcpsm3.psm
 *  character_colon             3A     uart_kcpsm3.psm
 *  character_d                 64     uart_kcpsm3.psm
 *  character_dollar            24     uart_kcpsm3.psm
 *  character_e                 65     uart_kcpsm3.psm
 *  character_equals            3D     uart_kcpsm3.psm
 *  character_f                 66     uart_kcpsm3.psm
 *  character_g                 67     uart_kcpsm3.psm
 *  character_greater_than      3E     uart_kcpsm3.psm
 *  character_h                 68     uart_kcpsm3.psm
 *  character_i                 69     uart_kcpsm3.psm
 *  character_j                 6A     uart_kcpsm3.psm
 *  character_k                 6B     uart_kcpsm3.psm
    character_l                 6C     uart_kcpsm3.psm
 *  character_less_than         3C     uart_kcpsm3.psm
 *  character_m                 6D     uart_kcpsm3.psm
    character_n                 6E     uart_kcpsm3.psm
 *  character_o                 6F     uart_kcpsm3.psm
 *  character_p                 70     uart_kcpsm3.psm
 *  character_q                 71     uart_kcpsm3.psm
 *  character_question          3F     uart_kcpsm3.psm
 *  character_r                 72     uart_kcpsm3.psm
 *  character_s                 73     uart_kcpsm3.psm
 *  character_semi_colon        3B     uart_kcpsm3.psm
 *  character_space             20     uart_kcpsm3.psm
 *  character_t                 74     uart_kcpsm3.psm
 *  character_u                 75     uart_kcpsm3.psm
 *  character_v                 76     uart_kcpsm3.psm
 *  character_w                 77     uart_kcpsm3.psm
 *  character_x                 78     uart_kcpsm3.psm
 *  character_y                 79     uart_kcpsm3.psm
 *  character_z                 7A     uart_kcpsm3.psm
    datestamp_day               15
    datestamp_month             07
    datestamp_year              13
    rx_data_present_pwm_gauge   02     uart_kcpsm3.psm
    rx_data_present_user        04     uart_kcpsm3.psm
 *  rx_full_pwm_gauge           01     uart_kcpsm3.psm
 *  rx_full_user                03     uart_kcpsm3.psm
 *  rx_half_full_pwm_gauge      00     uart_kcpsm3.psm
 *  rx_half_full_user           02     uart_kcpsm3.psm
    timestamp_hours             16
    timestamp_minutes           1F
    timestamp_seconds           31
    tx_full_led                 01     uart_kcpsm3.psm
    tx_full_sseg                01     uart_kcpsm3.psm
    tx_full_user                01     uart_kcpsm3.psm
 *  tx_half_full_led            00     uart_kcpsm3.psm
 *  tx_half_full_sseg           00     uart_kcpsm3.psm
 *  tx_half_full_user           00     uart_kcpsm3.psm

       * Unreferenced constant(s)


  No tables defined


List of text strings
--------------------
    STRING name  Value          Source PSM file
 --------------  -----          ---------------
    datestamp$   "21 Jul 2019"
    timestamp$   "22:31:49"


List of line labels
-------------------
    Label                  Addr  Source PSM file
 --------                  ----  ---------------
    UART_write_led         05C   uart_kcpsm3.psm
    UART_write_sseg        056   uart_kcpsm3.psm
    UART_write_user        050   uart_kcpsm3.psm
    divide                 075   uart_kcpsm3.psm
    division_loop          077   uart_kcpsm3.psm
    handle_led             011   uart_kcpsm3.psm
 *  initialize             000   uart_kcpsm3.psm
    mult_loop              06D   uart_kcpsm3.psm
    multiply               06A   uart_kcpsm3.psm
    no_add                 070   uart_kcpsm3.psm
    no_sub                 07E   uart_kcpsm3.psm
    program_loop           009   uart_kcpsm3.psm
    read_from_UART_pwm     064   uart_kcpsm3.psm
    read_from_UART_user    05E   uart_kcpsm3.psm
    read_number            062   uart_kcpsm3.psm
    read_pwm_number        068   uart_kcpsm3.psm
    receive_digit          025   uart_kcpsm3.psm
    receive_led_number     017   uart_kcpsm3.psm
    send_to_UART_led       058   uart_kcpsm3.psm
    send_to_UART_sseg      052   uart_kcpsm3.psm
    send_to_UART_user      04C   uart_kcpsm3.psm
    send_to_sseg           03C   uart_kcpsm3.psm
    switch_sseg_led_value  014   uart_kcpsm3.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          5
   ADDCY        -
   AND          -
   CALL         25
   COMPARE      1
   DISABLE      1
   ENABLE       -
   FETCH        -
   INPUT        7
   JUMP         30
   LOAD         21
   OR           -
   OUTPUT       3
   RETURN       10
   RETURNI      -
   RL           -
   RR           -
   SL0          2
   SL1          -
   SLA          1
   SLX          -
   SR0          1
   SR1          -
   SRA          2
   SRX          -
   STORE        -
   SUB          1
   SUBCY        -
   TEST         19
   XOR          -
